
package com.land.back.entities;

import java.util.Date;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.land.back.jpa.tx.util.EntidadGenerica;

/**
 * EstriboPerfil generated by hbm2java
 */
@Entity
@Table(name = "token_aoc")
public class TokenAoc extends EntidadGenerica {

	/**
	 * LGONZALEZ
	 */
	private static final long serialVersionUID = 1L;

	@Id
	@SequenceGenerator(name = "seq_token_aoc", sequenceName = "seq_token_aoc", allocationSize = 1)
	@GeneratedValue(generator = "seq_token_aoc", strategy = GenerationType.SEQUENCE)
	@Column(name = "id_token")
	private Long idToken = 0L;

	@Column(name = "token_aoc")
	private String token;

	@ManyToOne(cascade = CascadeType.MERGE)
	@JoinColumn(name = "id_usuario")
	private Usuario usuario;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_creacion")
	private Date fechaCreacion;

	public TokenAoc() {
	}

	@Transient
	@Override
	public Object getId() {
		return idToken;
	}

	@Transient
	@Override
	public String getQueryHql() {
		return this.queryHql;
	}

	@Transient
	@Override
	public Map<Object, Object> getParametros() {
		return this.params;
	}

	@Override
	public <T extends EntidadGenerica> EntidadGenerica cloneObj(T obj) {
		// TODO Auto-generated method stub
		return null;
	}

	public String getToken() {
		return token;
	}

	public void setToken(String token) {
		this.token = token;
	}

	public Date getFechaCreacion() {
		return fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	public void queryXToken() {
		this.queryHql = "FROM " + TokenAoc.class.getCanonicalName() + " t" + " WHERE t.token = :token";
		this.params.put("token", token);
	}

	public void queryXUsuario() {
		this.queryHql = "FROM " + TokenAoc.class.getCanonicalName() + " t" + " WHERE t.usuario.idUsuario = :idUser";
		this.params.put("idUser", usuario.getIdUsuario());
	}

	public Usuario getUsuario() {
		return usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	public Long getIdToken() {
		return idToken;
	}

	public void setIdToken(Long idToken) {
		this.idToken = idToken;
	}

}
